head	1.13;
access;
symbols;
locks
	nvishvkarma:1.13; strict;
comment	@ * @;


1.13
date	2017.01.30.14.59.01;	author root;	state Exp;
branches;
next	1.12;

1.12
date	2017.01.30.14.55.36;	author root;	state Exp;
branches;
next	1.11;

1.11
date	2017.01.30.14.51.57;	author root;	state Exp;
branches;
next	1.10;

1.10
date	2017.01.30.14.41.30;	author root;	state Exp;
branches;
next	1.9;

1.9
date	2017.01.25.06.00.21;	author root;	state Exp;
branches;
next	1.8;

1.8
date	2016.10.12.17.20.58;	author root;	state Exp;
branches;
next	1.7;

1.7
date	2016.10.11.02.30.03;	author root;	state Exp;
branches;
next	1.6;

1.6
date	2016.10.10.12.22.45;	author root;	state Exp;
branches;
next	1.5;

1.5
date	2016.10.10.09.17.16;	author root;	state Exp;
branches;
next	1.4;

1.4
date	2016.10.07.11.14.46;	author root;	state Exp;
branches;
next	1.3;

1.3
date	2016.10.07.11.11.31;	author root;	state Exp;
branches;
next	1.2;

1.2
date	2016.09.18.09.09.43;	author root;	state Exp;
branches;
next	1.1;

1.1
date	2016.09.18.08.59.17;	author root;	state Exp;
branches;
next	;


desc
@@


1.13
log
@*** empty log message ***
@
text
@// this is decompression of 3 byte
#include"header.h"
#include"prototype.h"
int decompression3()
{

	printf("in function----->%s\n",__func__);
	
	unsigned char *buff=NULL,ch,d,c,e,f,m;
	unsigned int efd,efd2,fd2,fd3,i=0,count,count1,length,j,n,r;	
	
	efd=open("compression",O_RDONLY);
	efd2=open("nikhil",O_RDONLY);
	fd2=open("encrypted_file",O_RDONLY);
	fd3=open("compressed_file",O_RDWR);
	

	count=lseek(efd2,0,SEEK_END); //main file nikhil
	count1=lseek(efd,0,SEEK_END); //master array
	length=lseek(fd2,0,SEEK_END); //encrypted file
	lseek(efd2,0,SEEK_SET);
	lseek(efd,0,SEEK_SET);
	lseek(fd2,0,SEEK_SET);
	printf("no. of characters in actual file && encrypted file is : %d && %d\n",count,length);
	buff=(char*)malloc(sizeof(char)*(count1));

	count1=read(efd,buff,(count1));
	printf("master array is : %s\n and no. of characters-----: %d\n",buff,count1);
	j=1,f=0; 
	while(i<length)
	{
		r =read(fd2,&ch,1);
		if(f==0)
		{
			printf("in ---->f(0)\n");	
			printf("character is read......yeah!----->%c && %d\n",ch,ch);
			c = ch;
			d = ch;
			e = ch;
			c = c >> 5;
			d = d << 3;
			d = d >> 5;
			e = e << 6;
			e = e >> 5;
			if(j<count)
			{
				write(fd3,(buff+c),1);
				printf("the written charracter is %c\n",*(buff+c));
				j++;
			}
			if(j<count)
			{
				write(fd3,(buff+d),1);
				printf("the written charracter is %c\n",*(buff+c));
				j++;
			}
		
		}
		if(f==1)
		{	
			printf("in ---->f(1)\n");	
			printf("character is read......yeah!----->%c && %d\n",ch,ch);
			c = ch;
			d = ch;
			m = ch;
			c = c >>7;
			e = e | c;
			c = ch;
			c = c << 1;
			c = c >> 5;
			d = d << 4;
			d = d >> 5;
			m = m << 7;
			m = m >> 5;
			if(j<count)
			{
				write(fd3,(buff+e),1);
				printf("the written charracter is %c\n",*(buff+e));
				j++;
			}
			if(j<count)
			{
				write(fd3,(buff+c),1);
				printf("the written charracter is %c\n",*(buff+c));
				j++;
			}
			if(j<count)
			{
				write(fd3,(buff+d),1);
				printf("the written charracter is %c\n",*(buff+d));
				j++;
			}
		
		}
		if(f==2)
		{	
			printf("in ---->f(1)\n");	
			printf("character is read......yeah!----->%c && %d\n",ch,ch);
			c = ch;
			d = ch;
			e = ch;
			c = c >> 6;
			m = m | c;
			d = d << 2;
			d = d >> 5;
			e = e << 5;
			e = e >> 5;
			if(j<count)
			{
				write(fd3,(buff+m),1);
				printf("the written charracter is %c\n",*(buff+m));
				j++;
			}
			if(j<count)
			{
				write(fd3,(buff+d),1);
				printf("the written charracter is %c\n",*(buff+d));
				j++;
			}
			if(j<count)
			{
				write(fd3,(buff+e),1);
				printf("the written charracter is %c\n",*(buff+e));
				j++;
			}
		
		}
		
	
	i++;
	f++;
	if(f==3)
	f=0;
	}
	close(fd2);
	close(fd3);
	close(efd);
	return 0;
	
}

@


1.12
log
@*** empty log message ***
@
text
@d33 1
a33 1
		if(f=0)
d59 1
a59 1
		if(f=1)
d95 1
a95 1
		if(f=2)
@


1.11
log
@*** empty log message ***
@
text
@d34 2
a35 1
		{	
d61 1
d97 1
@


1.10
log
@*** empty log message ***
@
text
@d128 3
@


1.9
log
@*** empty log message ***
@
text
@d8 4
a11 2
	unsigned char *buff=NULL,ch,c,d,e,m;
	unsigned int efd,fd2,fd3,i=0,count,count1,length,r;
d13 9
a21 11
	printf("efd is : %d\n",efd);
	count=lseek(efd,0,SEEK_END);
	printf("length of master array is ----->>>  : %d\n",count);
	buff=(char*)malloc(sizeof(char)*(count));
	if(!buff)
	{
		perror("malloc");
		exit(EXIT_FAILURE);	
	}
	count1=lseek(efd,0,SEEK_END);
	printf(" calculated length is --->: %d\n",count1);
d23 8
a30 9
	fd2=open("encrypted_file",O_RDONLY);
	if(fd2!=0)
	printf("ENCRYPTED FILE IS OPENED\n");
	fd3=open("compressed_file",O_RDWR | O_CREAT);
	if(fd3!=0)
	{
		printf("main file iis opened\n");
	}
	while(1)
d33 3
a35 4
		if(ch != 10)
		{
			if(r!=1)
			printf("character is not read......oops!!\n");
d44 13
a56 6
			printf("the locationn is ------>%d\n",c);
			write(fd3,(buff+c),1);
			printf("the written charracter is %c\n",*(buff+c));
			printf("the location is -------->%d\n",d);
			write(fd3,(buff+d),1);
			printf("the written character is %c\n",*(buff+d));
d58 3
a60 5
		read(fd2,&ch,1);
		if(ch != 10)
		{
			if(r!=1)
			printf("character is not read......oops!!\n");
d64 1
a64 1
			c = c >> 7;
d67 1
a67 1
			c = c << 7;
d69 1
a69 1
			d = d << 1;
d71 1
a71 1
			m = m << 4;
d73 19
a91 9
			printf("the locationn is ------>%d\n",e);
			write(fd3,(buff+e),1);
			printf("the written charracter is %c\n",*(buff+e));
			printf("the location is -------->%d\n",d);
			write(fd3,(buff+d),1);
			printf("the written character is %c\n",*(buff+d));
			printf("the location is -------->%d\n",m);
			write(fd3,(buff+m),1);
			printf("the written character is %c\n",*(buff+m));
d93 4
a96 5
		read(fd2,&ch,1);
		if(ch != 10)
		{
			if(r!=1)
			printf("character is not read......oops!!\n");
d99 2
a100 3
			m = ch;
			m = m >> 6;
			c = c | m;
d105 18
a122 10
			
			printf("the locationn is ------>%d\n",c);
			write(fd3,(buff+c),1);
			printf("the written charracter is %c\n",*(buff+c));
			printf("the location is -------->%d\n",d);
			write(fd3,(buff+d),1);
			printf("the written character is %c\n",*(buff+d));
			printf("the location is -------->%d\n",e);
			write(fd3,(buff+e),1);
			printf("the written character is %c\n",*(buff+e));
d124 1
d126 2
a127 1
		}
a128 2
	printf("the total characters in actuall file------>%d \n",length);
	
@


1.8
log
@*** empty log message ***
@
text
@d3 1
@


1.7
log
@*** empty log message ***
@
text
@d14 7
a21 2
	count1=read(efd,buff,(count));
	printf("master array is : %s\n and calculated length is --->: %d\n",buff,count1);
@


1.6
log
@*** empty log message ***
@
text
@d12 1
a12 1
	printf("count is : %d\n",count);
d16 1
a16 1
	printf("master array is : %s\n and count1: %d\n",buff,count1);
a24 4
	length=lseek(fd2,0,SEEK_END);
//	printf("the total characters in actuall file------>%d \n",length);
	lseek(fd2,0,SEEK_SET);
	lseek(fd2,0,SEEK_SET);
@


1.5
log
@*** empty log message ***
@
text
@d26 1
a26 1
	printf("the total characters in actuall file------>%d \n",length);
@


1.4
log
@*** empty log message ***
@
text
@d28 1
d106 2
@


1.3
log
@*** empty log message ***
@
text
@d103 1
a103 1
		
@


1.2
log
@*** empty log message ***
@
text
@d1 1
a1 2

//this is decompression  of 3 byte
d5 105
a109 2
	printf("in function ------> %s\n", __func__);
	return 0;	
d111 1
@


1.1
log
@Initial revision
@
text
@d2 1
a2 1
//this is decompression  of 4 byte
d4 1
a4 1
int compression3()
@
